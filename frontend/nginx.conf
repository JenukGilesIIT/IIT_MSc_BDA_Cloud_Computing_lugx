# LUGX Gaming Platform - Production Nginx Configuration
# Optimized for performance, security, and reliability

# Run nginx as non-root user for security
user nginx-user;

# Auto-detect CPU cores and create optimal number of worker processes
worker_processes auto;

# Log errors at 'notice' level and above
error_log /var/log/nginx/error.log notice;

# Process ID file location
pid /var/run/nginx.pid;

# Event handling configuration for optimal performance
events {
    # Maximum simultaneous connections per worker process
    worker_connections 1024;
    
    # Use epoll for efficient Linux I/O handling
    use epoll;
    
    # Accept multiple connections at once for better performance
    multi_accept on;
}

http {
    # Load MIME type definitions
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Kubernetes DNS resolver configuration - CRITICAL FOR SERVICE RESOLUTION
    resolver 10.152.183.1 valid=30s ipv6=off;  # MicroK8s CoreDNS IP address
    resolver_timeout 5s;

    # Define upstream servers using FQDN - prevents startup failures
    upstream lugx-game-service {
        server game-service.lugx-gaming.svc.cluster.local:3000;
        keepalive 32;
    }
    
    upstream lugx-order-service {
        server order-service.lugx-gaming.svc.cluster.local:3001;
        keepalive 32;
    }
    
    upstream lugx-analytics-service {
        server analytics-service.lugx-gaming.svc.cluster.local:3002;
        keepalive 32;
    }

    # Custom logging format with detailed request information
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Enable access logging with custom format
    access_log /var/log/nginx/access.log main;

    # Performance optimizations for file serving
    sendfile on;           # Efficiently transfer files from disk to network
    tcp_nopush on;         # Bundle data packets for fewer network calls
    tcp_nodelay on;        # Reduce latency for small responses
    keepalive_timeout 65;  # Keep connections alive for 65 seconds
    types_hash_max_size 2048;
    client_max_body_size 10M;  # Allow uploads up to 10MB

    # Gzip compression configuration (reduces bandwidth by 60-80%)
    gzip on;
    gzip_vary on;                    # Add Vary: Accept-Encoding header
    gzip_min_length 1024;           # Only compress files larger than 1KB
    gzip_proxied any;               # Compress for all proxied requests
    gzip_comp_level 6;              # Balanced compression level (1-9)
    
    # File types to compress
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/svg+xml
        image/x-icon
        text/css
        text/plain
        text/x-component;

    # Security headers to protect against common web attacks
    add_header X-Frame-Options "SAMEORIGIN" always;           # Prevent clickjacking
    add_header X-XSS-Protection "1; mode=block" always;       # Block XSS attacks
    add_header X-Content-Type-Options "nosniff" always;       # Prevent MIME sniffing
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Virtual server configuration
    server {
        # Listen on standard HTTP port 8080 (both IPv4 and IPv6)
        listen 8080;
        listen [::]:8080;
        
        # Accept requests for any server name
        server_name _;
        
        # Document root where static files are served from
        root /usr/share/nginx/html;
        
        # Default files to serve when directory is requested
        index index.html index.htm;

        # Hide nginx version information from attackers
        server_tokens off;

        # API Proxy Configuration - Forward API calls to backend services
        location /api/games {
            proxy_pass http://lugx-game-service/api/games;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location /api/orders {
            proxy_pass http://lugx-order-service/api/orders;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Analytics health check endpoint (specific route first)
        location = /api/analytics/health {
            proxy_pass http://lugx-analytics-service/health; 
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location /api/analytics/ {
            proxy_pass http://lugx-analytics-service/api/analytics/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Static file caching - cache assets for 1 year to improve performance
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;                                    # Cache for 1 year
            add_header Cache-Control "public, immutable";  # Mark as immutable
            add_header Vary Accept-Encoding;               # Vary on encoding
        }

        # Main location block - handles all requests
        location / {
            # Try to serve request as file, then directory, finally fallback to index.html
            # This enables client-side routing for single-page applications
            try_files $uri $uri/ /index.html;
        }

        # Health check endpoint for Kubernetes monitoring
        location /health {
            access_log off;                        # Don't log health checks
            return 200 "healthy\n";               # Return simple "healthy" response
            add_header Content-Type text/plain;   # Set proper content type
        }

        # Error page handling - redirect all errors to main page for SPA
        error_page 404 /index.html;              # Handle 404 (Not Found)
        error_page 500 502 503 504 /index.html;  # Handle server errors
    }
}


